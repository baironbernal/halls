{"version":3,"file":"static/js/116.d19a33b5.chunk.js","mappings":"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","sources":["components/button/Button.jsx","components/category/Category.jsx","components/category/OtherCategories.jsx","components/modal/ModalForm.jsx","hooks/useDatingCards.js","components/tinder/DatingCards.jsx","services/RegisterService.js","hooks/useForm.js","components/map/SiteCard.jsx","hooks/useMap.js","components/map/Map.jsx","services/MapService.js","hooks/useFilterMap.js","components/map/ContainerMap.jsx","pages/fluye/Fluye.jsx"],"sourcesContent":["import React from 'react'\nimport './Button.css';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Button = ({ url, titleButton, borderColor }) => {\n  return (\n    <>\n      <button className='button-general rounded-5 px-4 py-2' style={{\n        borderColor: borderColor\n      }}>\n        <Link to={url} className='text-white text-decoration-none z-1'>\n          {titleButton}\n          </Link>  \n      </button>\n    </>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from '../button/Button';\n\n//Animations\nimport {  Zoom } from 'react-reveal';\n\nconst Category = ({ imageUrl, borderColor }) => {\n  const publicURL = process.env.PUBLIC_URL;\n  return (\n    <>\n    <Zoom>\n      <article className=\"d-block text-decoration-none text-center w-auto mx-0 z-1\">\n              <img className=\"d-block mw-100 mx-auto w-auto\" src={publicURL+imageUrl} alt=\"fluye en la u\"/>\n              <Button url={'/'} \n                    titleButton={'Leer más'}\n                    borderColor={borderColor}\n                    ></Button>\n        </article>\n    </Zoom>\n      \n    </>\n  )\n}\n\nexport default Category\n","import React from 'react'\nimport Category from './Category';\n//Styles\nimport './Category.css';\n//Hooks\nimport useFolderRoot from '../../hooks/useFolderRoot';\n//Boostrap\nimport { Container, Figure, Row } from 'react-bootstrap';\n\n//Animations\nconst OtherCategories = () => {\n    const publicURL = process.env.PUBLIC_URL;\n    const {otherCategory} = useFolderRoot();\n\n  return (\n    <>\n      <section className=\"other-categories ff-gotham-medium\" style={{\n        background: otherCategory.firstColor\n      }}>\n              {/* Articles */}\n              \n                <div className=\"other-categories--title position-relative\" style={{ \n                  height: '200px',\n                  background: otherCategory.secondColor\n                }}>\n                      <Figure className='text-center position-absolute top-50 start-50'>\n                          <img src={publicURL + otherCategory.headerCategory} alt=\"Otras categorias\" className=\"mw-100\" /> \n                      </Figure>\n                    <div style={{\n                      width: '100vw',\n                      height: '200px',\n                      clipPath: 'polygon(0% 100%, 100% 0%, 100% 100%)',\n                      background: `linear-gradient(to right, ${otherCategory.firstColor} 0%,  ${otherCategory.firstColor} 100%)` \n                    }}></div>\n                </div>\n              \n\n              <Container className='pb-5'>\n                  <Row className=\"position-relative d-flex flex-column flex-lg-row justify-content-center gap-lg-5 mb-4\">\n                        <div className=\"overlay\">\n                            <img src={publicURL + \"/images/pages/green/bg-pepitas-3.png\"} \n                            alt=\"Pepitas flotantes\" \n                            className=\"floating-image mw-100 w-100 z-0 position-relative\" /> \n                        </div>\n                          {\n                              otherCategory.list ? (\n                                  otherCategory['list'].map( category => (\n                                      <Category borderColor={otherCategory.borderColor} key={category.url} imageUrl={category.urlImage}></Category>\n                                  ))\n                              ): null\n                          }\n                    </Row>\n              </Container>\n          </section>\n    </>\n  )\n}\n\nexport default OtherCategories\n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport useForm from '../../hooks/useForm';\nimport { useMyState } from '../../context/ContextGlobal';\n\nconst ModalForm = () => {\n     \n   const publicURL = process.env.PUBLIC_URL;\n   const { handleSubmit, modal, email, name,  setEmail, setName} = useForm(); \n   const { showModal, handleClose  } = useMyState()\n\n  return (\n    <div>\n      <Modal show={showModal}\n      className='modal'\n      style={{\n         backgroundColor: modal.primaryColor\n      }}\n      onHide={() => handleClose}\n      contentClassName='modal-content bg-transparent border-0 mb-5'\n      dialogClassName=\"modal-dialog modal-dialog-centered  modal-xl\"\n      aria-labelledby=\"example-custom-modal-styling-title\">\n\n<div tabIndex=\"-1\" aria-labelledby=\"amor-astros-modalLabel\" aria-hidden=\"true\">\n    <div className=\"modal-header flex-row justify-content-center border-0 my-4 \">\n            <div className=\"modal-header-banner align-self-center\">\n               <div className=\"row justify-content-md-center\">\n                  <div className=\"col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                     <img className=\"d-block mw-100\" \n                           src={publicURL + modal.headerImage} \n                           alt=\"Respira y toma un impulso\" />\n                     <p className=\"my-4 ff-gotham-bold text-white\">\n                        #RespiraYTomaUnImpulsoReal con Halls, suscríbete y no repitas <br/>\n                        la misma historia que viviste con tu ex por falta de compatibilidad.\n                     </p>\n                  </div>\n               </div>\n            </div>\n            \n               <img src={publicURL + \"/images/icons/close.svg\"} alt=\"close button\"\n                  onClick={handleClose} className='d-block align-self-baseline'\n                />\n         </div>\n         <form onSubmit={handleSubmit}>\n            <div className=\"modal-body bg-white p-4 rounded-4 mb-5\">\n               <div className=\"row\">\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-lg-x\">\n                     <label htmlFor=\"inputEmail4\" className=\"ms-2 text-start d-block form-label fs-6 fc-gray-soft\">Nombre:</label>\n                     <input type=\"text\" \n                           style={{ backgroundColor: modal.inputColor }} \n                           className=\"form-control rounded-4\" \n                           value={name} \n                           onChange={(e) => setName(e.target.value)}\n                           aria-label=\"First name\" />\n                  </div>\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-lg-x\">\n                     <label htmlFor=\"inputEmail4\" className=\"ms-2 text-start d-block form-label fs-6 fc-gray-soft\">Email:</label>\n                     <input type=\"email\" \n                           style={{ backgroundColor: modal.inputColor }} \n                           className=\"form-control rounded-4\" \n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                           aria-label=\"Email\" />\n                  </div>\n               </div>\n               <div className=\"row\">\n                  <div className=\"form-check d-flex justify-content-center gap-1 my-4\">\n                     <input className=\"form-check-input\" type=\"checkbox\" id=\"defaultCheck1\"  />\n                     <label className=\"form-check-label fc-gray-soft\" htmlFor=\"defaultCheck1\" v>\n                     Acepta términos y condiciones\n                     </label>  \n                  </div>\n               </div>\n               <div className=\"border-0 d-flex flex-row justify-content-center my-2 bg-transparent\">\n                  <button type=\"submit\" style={{ backgroundColor: modal.buttonColor }} className=\"d-block text-center text-white px-5 py-2 border-0 rounded-4\">Enviar</button>\n               </div>\n            </div>\n         </form>\n         <div className=\"row halls-text text-start mt-5\">\n            <a className=\"navbar-brand\" href=\"/\">\n            <img className=\"w-auto mb-3 \" src={publicURL + \"/images/logos/halls-white.svg\"} alt=\"Halls Logo\" />\n            </a>\n            <p className=\"ff-gotham-medium fs-6 text-white\"> \n            Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias desde el año 1500, cuando un impresor (N. del T. persona que se dedica a la imprenta) desconocido usó una galería de textos y los mezcló de tal manera que logró hacer un libro de</p>\n         </div>\n      </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ModalForm\n","import React, { useState, useRef, useMemo } from 'react';\n\nconst useDatingCards = () => {\n\nconst db = [\n    {\n    question: \"¿Primer app date? Cadena de consejos para romper el hielo en tu próxima cita👇?\",\n    repply: \"Para que tu amix deje el overthinking, respira y mándale tu ubicación en tiempo real 📌.\"\n    },\n    {\n    question: \"¿Primer app date? Cadena de consejos para romper el hielo en tu próxima cita👇?\",\n    repply: \"El outfit es tan importante como respirar y alistar tu stick de Halls Negro antes de salir 😏.\"\n    },\n    {\n    question: \"¿Primer app date? Cadena de consejos para romper el hielo en tu próxima cita👇?\",\n    repply: \"No le hables de tu ex! Respira y mejor ofrécele el último Hallsito 😉.\"\n    },\n    {\n    question: \"¿Primer app date? Cadena de consejos para romper el hielo en tu próxima cita👇?\",\n    repply: \"Keep it real, toma un respiro con Halls y no sobre actúes.\"\n    },\n    {\n    question: \"¿Primer app date? Cadena de consejos para romper el hielo en tu próxima cita👇?\",\n    repply: \"Si la cita está muy mala, respira y pon una alarma en tu celular a las 10 pm, la podrás usar como timbre de llamada urgente. 📲\"\n    },\n    {\n    question: \"¿Primer app date? Cadena de consejos para romper el hielo en tu próxima cita👇?\",\n    repply: \"Busca spots relajados donde se sientan cómodos, un Hallsito y déjalo fluir. 😉\"\n    }\n]\n  const [currentIndex, setCurrentIndex] = useState(db.length - 1)\n  const [lastDirection, setLastDirection] = useState()\n  // used for outOfFrame closure\n  const currentIndexRef = useRef(currentIndex)\n\n  const childRefs = useMemo(\n    () =>\n      Array(db.length)\n        .fill(0)\n        .map((i) => React.createRef()),\n    []\n  )\n\n  const updateCurrentIndex = (val) => {\n    setCurrentIndex(val)\n    currentIndexRef.current = val\n  }\n\n  const canGoBack = currentIndex < db.length - 1\n\n  const canSwipe = currentIndex >= 0\n\n  // set last direction and decrease current index\n  const swiped = (direction, nameToDelete, index) => {\n    setLastDirection(direction)\n    updateCurrentIndex(index - 1)\n  }\n\n  const outOfFrame = (name, idx) => {\n    currentIndexRef.current >= idx && childRefs[idx].current.restoreCard()\n  }\n\n  const swipe = async (dir) => {\n    if (canSwipe && currentIndex < db.length) {\n      await childRefs[currentIndex].current.swipe(dir) // Swipe the card!\n    }\n  }\n\n  // increase current index and show card\n  const goBack = async () => {\n    if (!canGoBack) return\n    const newIndex = currentIndex + 1\n    updateCurrentIndex(newIndex)\n    await childRefs[newIndex].current.restoreCard()\n  }\n\n  return { outOfFrame, childRefs, db, swiped, canSwipe, goBack,  swipe };\n};\n\nexport default useDatingCards;\n","import React  from 'react'\nimport TinderCard from 'react-tinder-card'\nimport './DatingCards.css'\nimport useDatingCards from '../../hooks/useDatingCards'\n\nfunction DatingCards () {\n\n   const { outOfFrame, childRefs, db, swiped, canSwipe, goBack, swipe } = useDatingCards();\n   const publicURL = process.env.PUBLIC_URL;\n\n  return (\n    <div >\n      <div className='cardContainer w-100 d-flex justify-content-center'>\n        {db.map((card, index) => (\n          <TinderCard\n            ref={childRefs[index]}\n            className='swipe'\n            key={index}\n            onSwipe={(dir) => swiped(dir, card.question, index)}\n            onCardLeftScreen={() => outOfFrame(card.question, index)}\n          >\n            <div className='card'>\n              <p className=\"text-center ff-gotham-bold fs-5\">{card.question}</p>\n              <p className=\"card--question text-center p-2 rounded-4 bg-gray-light-h fc-gray-light \"> {card.repply}</p>\n            </div>\n          </TinderCard>\n        ))}\n      </div>\n      <div className='buttons mx-auto d-block'>\n        <img className='mx-3' onClick={() => swipe('left')} src={publicURL + '/images/pages/red/pink-x.svg'} alt='X' />\n        <img onClick={() => swipe('right')} src={publicURL + '/images/pages/red/heart.svg' } alt='heart'/>\n      </div>\n    </div>\n  )\n}\n\nexport default DatingCards\n","import axios from 'axios';\nconst API_BASE_URL = 'http://app-lubowitz.o63ysw09ej-gok67yemr652.p.temp-site.link';  // Replace with your API base URL\n\nconst instance = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nconst RegisterService = {\n    \n    register: async (person) => {\n\n      try {\n        const response = await instance.post('/api/store', person); // Assuming the JSON file is in the root directory\n        //If \n        localStorage.setItem('SIGN_STAR', true);\n        return response.data;\n      } catch (error) {\n        throw new Error('Error fetching data from the JSON file');\n      }\n    },\n  };\n  \n  export default RegisterService;\n  ","import { useState} from 'react';\nimport useFolderRoot from './useFolderRoot';\nimport RegisterService from '../services/RegisterService';\n\nconst useForm = () => {\n\n      const { modal } = useFolderRoot();\n      const [email, setEmail] = useState('');\n      const [name, setName] = useState('');    \n   \n   \n      const handleSubmit = async (e) => {\n         e.preventDefault();\n     \n         try {\n            await RegisterService.register({ email, name });\n            alert('Data has been successfully stored!');\n         } catch (error) {\n            alert('Error storing data.');\n         }\n      };\n\n  return { handleSubmit, modal, email, name,  setEmail, setName};\n};\n\nexport default useForm;\n","import React from 'react'\nimport { Col, Row } from 'react-bootstrap'\n\nconst SiteCard = ({name, hours, address}) => {\n  return (\n    <>\n      <Row className='my-4'>\n            <Col xs={12} md={12} lg={12} xl={12}>\n                <h3 className='text-start text-white text-bold ff-gotham-bold'>{name}</h3>\n                <p className='text-start text-white ff-gotham-book'>\n                {hours}\n                </p>\n                <p className='text-start text-white ff-gotham-book'>\n                {address}\n                </p>\n            </Col>\n      </Row>\n      <hr className='d-block text-white' style={{\n        height: '20px',\n      }} />\n    </>\n  )\n}\n\nexport default SiteCard\n","import { useLoadScript } from '@react-google-maps/api';\nimport { useEffect, useState } from 'react';\n\nconst useMap = (locations) => {\n    const initialMarkers = [\n        {\n          id: 1,\n          name: \"Colombia\",\n          position: { lat: 4.473972471817378, lng: -73.51971196863701 }\n        },\n      ];\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: 'AIzaSyDWhb3NnSahO0oYXuIF2_nAY2gORFURCN0'\n      });\n    \n      const [markers, setMarkers] = useState(initialMarkers);\n      const [activeMarker, setActiveMarker] = useState(null);\n      const [center, setCenter] = useState(initialMarkers[0].position); // Default center\n    \n      //Every time that locations change, set new values for positions and center map\n      useEffect(() => {\n        if (!locations['markers']) return;\n        setMarkers(locations['markers'])\n        setCenter(calculateCenter(locations['markers']));\n      \n      },[locations['markers']])\n      \n        //Handle and active marker\n      const handleActiveMarker = (marker) => {\n        if (marker === activeMarker) {\n          return;\n        }\n        setActiveMarker(marker);\n      };\n    \n      //Calculate the center of positions for show in the map every time that interact with selects forms\n      const calculateCenter = (positions) => {\n        if (positions.length === 0) return center;\n          // Return a default center if there are no positions\n          \n        // Initialize total latitude and longitude\n        let totalLat = 0;\n        let totalLng = 0;\n      \n        // Calculate the sum of latitudes and longitudes\n        positions.forEach((item) => {\n          if (item.position && item.position.lat && item.position.lng) {\n            totalLat += item.position.lat;\n            totalLng += item.position.lng;\n          }\n        });\n      \n        // Calculate the average\n        const avgLat = totalLat / positions.length;\n        const avgLng = totalLng / positions.length;\n      \n        return { lat: avgLat, lng: avgLng };\n      };\n    \n\n  return {markers , center, isLoaded, activeMarker, handleActiveMarker,setActiveMarker};\n};\n\nexport default useMap;\n","import { Fragment } from \"react\";\nimport {\n  GoogleMap,\n  InfoWindowF,\n  MarkerF,\n} from \"@react-google-maps/api\";\nimport useMap from \"../../hooks/useMap\";\n\nfunction Map(locations) {\n\n  const {markers , center, isLoaded, activeMarker, handleActiveMarker,setActiveMarker} = useMap(locations);\n \n  return (\n    <Fragment>\n      <div>\n          {isLoaded ? (\n            <GoogleMap\n              center={center} \n              zoom={12}\n              onClick={() => setActiveMarker(null)}\n              mapContainerStyle={{ width: \"100%\", height: \"600px\", borderRadius:'25px'}}\n            >\n              {markers.map(({ id, name, position }) => (\n                <MarkerF\n                  key={id}\n                  position={position}\n                  onClick={() => handleActiveMarker(id)}>\n                  {activeMarker === id ? (\n                    <InfoWindowF onCloseClick={() => setActiveMarker(null)}>\n                      <div>\n                        <p>{name}</p>\n                      </div>\n                    </InfoWindowF>\n                  ) : null}\n                </MarkerF>\n              ))}\n            </GoogleMap>\n          ) : null}\n        </div>\n    </Fragment>\n  );\n}\n\nexport default Map;\n","import data from '../data/map.json';\n\nconst MapService = {\n  filterByCityAndCategory: async ({ city, category }) => {\n\n    var info = [];\n    var locations = [];\n  \n    if (city && category) {\n      info = data.drops.filter((drop) => drop.city === city && drop.category === category)\n        .map((drop) => {\n          locations.push(\n              {id: drop.name, name: drop.name, position: drop.geocode[0]?.results[0]?.geometry?.location || null}\n          );\n          return {\n            name: drop.name,\n            hours: drop.hours,\n            address: drop.address,\n          }\n        });\n    } \n    else if(city){\n      info = data.drops.filter((drop) => drop.city === city)\n        .map((drop) => {\n          locations.push(\n              {id: drop.name, name: drop.name, position: drop.geocode[0]?.results[0]?.geometry?.location || null}\n          );\n          return {\n            name: drop.name,\n            hours: drop.hours,\n            address: drop.address,\n          }\n        });\n    }\n    else {\n      info = data.drops\n        .map((drop) => {\n          locations.push(\n              {id: drop.name, name: drop.name, position: drop.geocode[0]?.results[0]?.geometry?.location || null}\n          );\n          return {\n            name: drop.name,\n            hours: drop.hours,\n            address: drop.address,\n          }\n        });\n      }\n    return {\n      info: info, locations: locations\n    }\n  },\n};\n\nexport default MapService;\n","import { useEffect, useState } from 'react';\nimport MapService from '../services/MapService';\n\nconst useFilterMap = () => {\n    \n    const [city, setCity] = useState('')\n    const [category, setCategory] = useState('');\n    const [data, setData] = useState({})\n    \n    //Every time that modify (city, category) do getDataByFilters\n    useEffect(() => {  \n    \n      getDataByFilters()\n     \n      }, [city, category]);\n    \n      //set width resize windows\n      \n      const getDataByFilters = async () => {\n        try {\n          const response = await MapService.filterByCityAndCategory({city, category});\n          setData(response)\n          //setMarkers(data);\n          \n        } catch (error) {\n          console.error('Error fetching data:', error.message);\n        }\n      };\n    \n\n  return {setCategory, setCity,  data};\n};\n\nexport default useFilterMap;\n","import React from 'react'\nimport { Col, Container, Form, Row } from 'react-bootstrap'\nimport SiteCard from '../../components/map/SiteCard';\n//Import\nimport './Map.css'\nimport Map from './Map';\nimport useFilterMap from '../../hooks/useFilterMap';\nimport ModalForm from '../modal/ModalForm';\nimport { useMyState } from '../../context/ContextGlobal';\n\nconst ContainerMap = () => {\n\n   const {setCategory, setCity, data} = useFilterMap();\n   const { setAction, action, showModal} =useMyState();\n\n  return (\n    \n    <>\n    <Container className='container-map rounded-4 p-5'>\n        <Row>\n            <img src=\"\" alt=\"\" />\n        </Row>\n        <Row>\n            <Col xs={12} md={12} lg={4} xl={4}>\n                <Row className='justify-content-center gy-3'>\n                    <Col xs={12} md={12} lg={6} xl={6}>\n                        <Form.Select \n                        onChange={e => {\n                            setAction(action + 1);\n                            if(!showModal) {\n                                return setCity(e.target.value);\n                            } \n                            return;\n                            \n\n                        }}\n                        className='form-control rounded-5 py-2 fc-gray-soft ff-gotham-book'>\n                            <option value=\"all\">Buscar Ciudad</option>\n                            <option value=\"Bogotá\">Bogotá</option>\n                            <option value=\"Medellín\">Medellín</option>\n                            <option value=\"Cali\">Cali</option>\n                            <option value=\"Cartagena\">Cartagena</option>\n                        </Form.Select>\n                    </Col>\n                    <Col xs={12} md={12} lg={6} xl={6}>\n                        <Form.Select \n                        onChange={e => {\n                            setAction(action + 1);\n                            if(!showModal) {\n                                return setCategory(e.target.value)\n                            } \n                            return;\n                            \n                        }}\n                        className='form-control rounded-5 py-2 fc-gray-soft ff-gotham-book'>\n                            <option value=\"all\" className='fc-gray-soft'>Buscar Categoría</option>\n                            <option value=\"Experimentar\">Experimentar</option>\n                            <option value=\"Socializar\">Socializar</option>\n                            <option value=\"Compartir\">Compartir</option>\n                        </Form.Select>\n                    </Col>\n                </Row>\n                <Row className='container-map--sites justify-content-center mt-4'>\n                    {data.info && data.info.map((item, index) => (  \n                        <SiteCard\n                            key={index}\n                            name={item.name} \n                            hours={item.hours} \n                            address={item.address} />\n                    ))}\n                   \n                </Row>\n            </Col>\n            <Col xs={12} md={12} lg={8} xl={8}>\n                {/* <Map /> */}\n                <Map markers={ data.locations }  />\n            </Col>\n        </Row>\n        <div className=\"mt-0 p-0\">\n          <ModalForm />\n        </div>\n    </Container>\n    </>\n  )\n}\n\nexport default ContainerMap\n","import React from 'react'\nimport '../../styles/keyframes.css';\n\nimport './Fluye.css';\nimport ContainerMap from '../../components/map/ContainerMap';\nimport OtherCategories from '../../components/category/OtherCategories';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { LightSpeed } from 'react-reveal';\nimport DatingCards from '../../components/tinder/DatingCards';\n\n\nconst Fluye = () => {\n  const publicURL = process.env.PUBLIC_URL;\n  return (\n    <>\n    <div className=\"container-fluid overlay\">\n        <img src={publicURL + \"/images/pages/purple/bg-pepitas.png\"} alt=\"Floating Images\" className=\"pepitas floating-image mw-100 w-100\" /> \n    </div>\n      <section className='fluye text-center ff-gotham-medium'>\n        <Container className='py-5'>\n            <Row>\n              <LightSpeed right>\n                  <figure>\n                      <img className=\"mw-100\" \n                      src={publicURL + \"/images/pages/purple/fluye-barra.svg\"} alt=\"Barra purple\" /> \n                  </figure>\n              </LightSpeed>\n                \n            </Row>\n        </Container>\n\n          {/* Zone Maps */}\n          <LightSpeed left>\n            <ContainerMap/>\n          </LightSpeed>\n            \n          {/* Zone Maps End */}\n        <Row className='text-center'>\n        <p className='text-white fs-5 mt-5'>¿Nuevo en la zona? Dile no a los sitios más básicos del lugar. #RespiraYTomaUnImpulsoReal <br />\n          con Halls y sé el anfitrión más cool entre tus amigos.</p>\n        </Row>\n\n      <Row className='justify-content-center align-items-center'>\n        <Col xs={12} md={12} lg={6} xl={6} style={{\n          height:'100%',\n          maxWidth: '40rem',\n          \n        }}>\n                <article>\n                  <figure className='text-center mw-100'>\n                    <img className='mw-100' src={publicURL + \"/images/pages/purple/consejos.png\"} alt=\"Consejos de último semestre\" />\n                  </figure>\n                  <p className='text-white'>¿Listo para dejar de ser ese “primíparo” <br />\n                    que no pasa desapercibido?</p>\n                </article>\n        </Col>\n        <Col xs={12} md={12} lg={6} xl={6} style={{\n          height:'100%',\n          maxWidth: '40rem',\n          alignSelf: 'center'\n        }} id='containerCardsSlide'>\n            {/*Tinder Cards Love and Nope*/}\n              <DatingCards className='my-5' />\n        </Col>\n      </Row>\n      <Row>\n        <OtherCategories/>\n      </Row>\n      </section>\n\n    </>\n  )\n}\n\nexport default Fluye\n"],"names":["_ref","url","titleButton","borderColor","_jsx","_Fragment","children","className","style","Link","to","imageUrl","Zoom","_jsxs","src","process","alt","Button","publicURL","otherCategory","useFolderRoot","background","firstColor","height","secondColor","Figure","headerCategory","width","clipPath","concat","Container","Row","list","map","category","Category","urlImage","_useForm","useForm","handleSubmit","modal","email","name","setEmail","setName","_useMyState","useMyState","showModal","handleClose","Modal","show","backgroundColor","primaryColor","onHide","contentClassName","dialogClassName","tabIndex","headerImage","onClick","onSubmit","htmlFor","type","inputColor","value","onChange","e","target","id","v","buttonColor","href","db","question","repply","_useState","useState","length","_useState2","_slicedToArray","currentIndex","setCurrentIndex","_useState3","_useState4","setLastDirection","currentIndexRef","useRef","childRefs","useMemo","Array","fill","i","React","updateCurrentIndex","val","current","canGoBack","canSwipe","swipe","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dir","wrap","_context","prev","next","stop","_x","apply","arguments","goBack","_ref2","_callee2","newIndex","_context2","abrupt","restoreCard","outOfFrame","idx","swiped","direction","nameToDelete","index","_useDatingCards","useDatingCards","card","TinderCard","ref","onSwipe","onCardLeftScreen","instance","axios","create","baseURL","RegisterService","register","_register","person","response","post","sent","localStorage","setItem","data","t0","Error","preventDefault","alert","hours","address","Col","xs","md","lg","xl","locations","initialMarkers","position","lat","lng","isLoaded","useLoadScript","googleMapsApiKey","markers","setMarkers","activeMarker","setActiveMarker","_useState5","_useState6","center","setCenter","useEffect","calculateCenter","positions","totalLat","totalLng","forEach","item","handleActiveMarker","marker","_useMap","useMap","Fragment","GoogleMap","zoom","mapContainerStyle","borderRadius","MarkerF","InfoWindowF","onCloseClick","MapService","filterByCityAndCategory","_filterByCityAndCategory","city","info","filter","drop","_drop$geocode$","_drop$geocode$$result","_drop$geocode$$result2","push","geocode","results","geometry","location","_drop$geocode$2","_drop$geocode$2$resul","_drop$geocode$2$resul2","_drop$geocode$3","_drop$geocode$3$resul","_drop$geocode$3$resul2","setCity","setCategory","setData","getDataByFilters","console","error","message","_useFilterMap","useFilterMap","setAction","action","Form","Select","SiteCard","Map","ModalForm","LightSpeed","right","left","ContainerMap","maxWidth","alignSelf","DatingCards","OtherCategories"],"sourceRoot":""}