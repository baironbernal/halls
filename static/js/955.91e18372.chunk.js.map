{"version":3,"file":"static/js/955.91e18372.chunk.js","mappings":"0JA8BA,EA1Be,SAAHA,GAA2C,IAArCC,EAAGD,EAAHC,IAAKC,EAAWF,EAAXE,YAAaC,EAAWH,EAAXG,YAClC,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAEIL,GACEG,EAAAA,EAAAA,KAAA,UAAQG,UAAU,qCAAqCC,MAAO,CAC9DL,YAAaA,GACbG,UACAF,EAAAA,EAAAA,KAAA,KAAGK,KAAMR,EAAKM,UAAU,sCAAqCD,SAC1DJ,OAILE,EAAAA,EAAAA,KAAA,UAAQG,UAAU,qCAAqCC,MAAO,CAC5DL,YAAaA,GACbG,UACAF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,sCAAqCD,SAClDJ,OAOb,C,gGCLA,EAjBiB,SAAHF,GAAwC,IAAlCU,EAAQV,EAARU,SAAUP,EAAWH,EAAXG,YAAaF,EAAGD,EAAHC,IAEzC,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACHM,EAAAA,EAAAA,MAAA,WAASL,UAAU,2DAA0DD,SAAA,EACrEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAAgCM,IALzCC,mCAKwDJ,EAAUK,IAAI,mBAC5EX,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACf,IAAKA,EACPC,YAAa,cACbC,YAAaA,UAMjC,E,wCC0CA,EArDwB,WACpB,IAAMc,EAAYH,mCACXI,GAAiBC,EAAAA,EAAAA,KAAjBD,cAET,OACEd,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEM,EAAAA,EAAAA,MAAA,WAASL,UAAU,oCAAoCC,MAAO,CAC5DY,WAAYF,EAAcG,YAC1Bf,SAAA,EAGQM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4CAA4CC,MAAO,CAChEc,OAAQ,QACRF,WAAYF,EAAcK,aAC1BjB,SAAA,EACIF,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACjB,UAAU,gDAA+CD,UAC7DF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAYC,EAAcO,eAAgBV,IAAI,mBAAmBR,UAAU,cAE3FH,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CACVkB,MAAO,QACPJ,OAAQ,QACRK,SAAU,uCACVP,WAAW,6BAADQ,OAA+BV,EAAcG,WAAU,UAAAO,OAASV,EAAcG,WAAU,iBAK1GjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACtB,UAAU,OAAMD,UACvBM,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAACvB,UAAU,wFAAuFD,SAAA,EAChGF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAASD,UACpBF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAYC,EAAca,QACpChB,IAAI,oBACJR,UAAU,wDAGRW,EAAcc,KACVd,EAAoB,KAAEe,KAAK,SAAAC,GAAQ,OAC/B9B,EAAAA,EAAAA,KAAC+B,EAAQ,CACPhC,YAAae,EAAcf,YAE3BO,SAAUwB,EAASE,SACnBnC,IAAMiC,EAASjC,KAFViC,EAASjC,IAGZ,IAET,cAOjC,C,8EC/BA,EA5BmB,WACf,IAAAoC,GAAwCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwCL,EAAAA,EAAAA,UAAS,OAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEtCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,CAAC,MAAO,SACnBC,EAAe,EAEbC,EAAaC,aAAY,WAE3BL,EAAgBE,EAAOC,IACvBA,GAAgBA,EAAe,GAAKD,EAAOI,OAE3CV,GAAgB,SAAAW,GAAW,OAAIA,EAAc,CAAC,GAClD,GAAG,KAGH,OAAO,kBAAMC,cAAcJ,EAAY,CACzC,GAAG,IAEH,IAAMK,EAAQC,KAAKC,MAAMhB,EAAe,MAKxC,MAAO,CAAEiB,QAHOjB,EAAe,GAGbkB,QAJFH,KAAKC,MAAOhB,EAAe,KAAQ,IAIxBc,MAAAA,EAAQV,aAAAA,EACrC,E,mBCgCA,EAvDqB,SAAH7C,GAAoB,IAAd4D,EAAM5D,EAAN4D,OACd3C,EAAYH,mCAClB+C,EAAkDC,IAA1CJ,EAAOG,EAAPH,QAASC,EAAOE,EAAPF,QAASJ,EAAKM,EAALN,MAAQV,EAAYgB,EAAZhB,aACpC,OACEzC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oDAAmDD,SAAA,EAC5DM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAiBC,MAAO,CACnCuD,SAAUH,EAAS,SAAW,SAChCtD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC5BF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,+BAAgCF,IAAI,mBAE9DH,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAASyD,GAAG,UAAUxD,MAAO,CAACyD,gBAAiBpB,MAC9DzC,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,uBAAwBF,IAAI,YAEtDH,EAAAA,EAAAA,MAAA,OAAKoD,GAAG,WAAU1D,SAAA,CAAC,MAAIiD,EAAQ,GAAK,IAAM,GACrCA,EAAM,IAAEI,EAAU,GAAK,IAAM,GAAIA,EAAQ,IAAED,EAAU,GAAK,IAAM,GAAIA,KAIrEE,IACIhD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kBAAiBD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8GACHF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CACPf,IAAK,wBACLE,YAAa,UACbD,YAAa,sBAMzB0D,IACIhD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,yBAAwBD,SAAA,EACvCF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,mCAAkCD,SAAC,gOAG5CF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UAC5BF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CACHf,IAAK,wBACLE,YAAa,UACbD,YAAa,mBAEjBE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,gBAQxB,C,qHCvDM8D,E,QAAWC,EAAMC,OAAO,CAC1BC,QAHiB,iDAMfC,EAAkB,CAEpBC,SAAS,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAM,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGIhB,EAASiB,KAAK,aAAcN,GAAQ,KAAD,EAElB,OAFlCC,EAAQE,EAAAI,KAEdC,aAAaC,QAAQ,aAAa,GAAMN,EAAAO,OAAA,SACjCT,EAASU,MAAI,aAAAR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEd,IAAIU,MAAM,0CAA0C,KAAD,oBAAAV,EAAAW,OAAA,GAAAf,EAAA,kBAE5D,gBAAAgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,EAVQ,IAaX,I,UCOF,EAvBgB,WAEV,IAAQC,GAAU5E,EAAAA,EAAAA,KAAV4E,MACR1D,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B2D,EAAKzD,EAAA,GAAE0D,EAAQ1D,EAAA,GACtBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BuD,EAAItD,EAAA,GAAEuD,EAAOvD,EAAA,GACZwD,GAAiBC,EAAAA,EAAAA,KAAjBD,YACRE,GAA0BhE,EAAAA,EAAAA,UAAS,MAAKiE,GAAA/D,EAAAA,EAAAA,GAAA8D,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAGhBG,EAAY,eAAA1G,GAAAyE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO+B,GAAC,OAAAjC,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAnByB,EAAEC,iBAAiB5B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGVZ,EAAgBC,SAAS,CAAEyB,MAAAA,EAAOE,KAAAA,IAAQ,KAAD,EAC/CE,IAAapB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEbyB,EAAS,2DAA2D,yBAAAzB,EAAAW,OAAA,GAAAf,EAAA,kBAEzE,gBATiBgB,GAAA,OAAA5F,EAAA6F,MAAA,KAAAC,UAAA,KAWtB,MAAO,CAAEY,aAAAA,EAAcX,MAAAA,EAAOC,MAAAA,EAAOE,KAAAA,EAAOD,SAAAA,EAAUE,QAAAA,EAASK,MAAAA,EACjE,E,mBCsEA,EA3FkB,WAEf,IAAMvF,EAAYH,mCAClB+F,EAAuEC,IAA/DJ,EAAYG,EAAZH,aAAcX,EAAKc,EAALd,MAAOC,EAAKa,EAALb,MAAOE,EAAIW,EAAJX,KAAOD,EAAQY,EAARZ,SAAUE,EAAOU,EAAPV,QAASK,EAAKK,EAALL,MAC9DO,GAAoCV,EAAAA,EAAAA,KAA5BW,EAASD,EAATC,UAAWZ,EAAWW,EAAXX,YAEpB,OACEhG,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACC,KAAMF,EACbzG,UAAU,QACVC,MAAO,CACJyD,gBAAiB8B,EAAMoB,cAE1BC,OAAQ,kBAAMhB,CAAW,EACzBiB,iBAAiB,6CACjBC,gBAAgB,+CAChB,kBAAgB,qCAAoChH,UAE1DM,EAAAA,EAAAA,MAAA,OAAK2G,SAAS,KAAK,kBAAgB,yBAAyB,cAAY,OAAMjH,SAAA,EAC1EM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8DAA6DD,SAAA,EACpEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wCAAuCD,UACnDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BD,UAC3CM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0CAAyCD,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,yBACTM,IAAKI,EAAY8E,EAAMyB,YACvBzG,IAAI,+BACVX,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iCAAgCD,SAAEyF,EAAM0B,sBAK3DrH,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,0BAA2BF,IAAI,eAClD2G,QAAStB,EAAa7F,UAAU,oCAGzCH,EAAAA,EAAAA,KAAA,QAAMuH,SAAUjB,EAAapG,UAC1BM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,yCAAwCD,SAAA,EACpDM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,MAAKD,SAAA,EACjBM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uCAAsCD,SAAA,EAClDF,EAAAA,EAAAA,KAAA,SAAOwH,QAAQ,cAAcrH,UAAU,uDAAsDD,SAAC,aAC9FF,EAAAA,EAAAA,KAAA,SAAOyH,KAAK,OACNrH,MAAO,CAAEyD,gBAAiB8B,EAAM+B,YAChCvH,UAAU,yBACVwH,MAAO7B,EACP8B,SAAU,SAACrB,GAAC,OAAKR,EAAQQ,EAAEsB,OAAOF,MAAM,EACxC,aAAW,mBAEpBnH,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uCAAsCD,SAAA,EAClDF,EAAAA,EAAAA,KAAA,SAAOwH,QAAQ,cAAcrH,UAAU,uDAAsDD,SAAC,YAC9FF,EAAAA,EAAAA,KAAA,SAAOyH,KAAK,QACNrH,MAAO,CAAEyD,gBAAiB8B,EAAM+B,YAChCvH,UAAU,yBACVwH,MAAO/B,EACPgC,SAAU,SAACrB,GAAC,OAAKV,EAASU,EAAEsB,OAAOF,MAAM,EACzC,aAAW,iBAGvB3H,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UACjBM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sDAAqDD,SAAA,EACjEF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,mBAAmBsH,KAAK,WAAW7D,GAAG,mBACvD5D,EAAAA,EAAAA,KAAA,SAAOG,UAAU,gCAAgCqH,QAAQ,gBAAgBM,GAAC,EAAA5H,SAAC,0CAMxEkG,IACGpG,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iBAAiBC,MAAO,CAClC2H,MAAO,MACPC,SAAU,QACX9H,SAAEkG,OAInBpG,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sEAAqED,UACjFF,EAAAA,EAAAA,KAAA,UAAQyH,KAAK,SAASrH,MAAO,CAAEyD,gBAAiB8B,EAAMsC,aAAe9H,UAAU,8DAA6DD,SAAC,mBAItJF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iCAAgCD,UAC5CF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,eAAeE,KAAK,IAAGH,UACpCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAeM,IAAKI,EAAY,gCAAiCF,IAAI,yBAOhG,C,yMCqBA,EAhHsB,WAElB,IAAAsB,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CiG,EAAW/F,EAAA,GAAEgG,EAAchG,EAAA,GAClCI,GAAwBL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7B6F,EAAI5F,EAAA,GAAE6F,EAAO7F,EAAA,GAEpBmE,GAAqEV,EAAAA,EAAAA,KAAlDqC,GAAF3B,EAATC,UAAiBD,EAAN2B,QAAQC,EAAS5B,EAAT4B,UAAWC,EAAY7B,EAAZ6B,aAAcC,EAAY9B,EAAZ8B,aAE5CC,EAAS,CACb,CACI9E,GAAI,EACJ+E,MAAO,gBACP3G,SAAU,wCACV4G,QAAS,oCACTC,WAAY,wDAGhB,CACIjF,GAAI,EACJ+E,MAAO,mBACP3G,SAAU,2CACV4G,QAAS,uCACTC,WAAY,2DAGhB,CACIjF,GAAI,EACJ+E,MAAO,cACP3G,SAAU,sCACV4G,QAAS,kCACTC,WAAY,sDAGhB,CACIjF,GAAI,EACJ+E,MAAO,yBACP3G,SAAU,uCACV4G,QAAS,6CACTC,WAAY,6DAKpBlG,EAAAA,EAAAA,YAAU,WACRmG,GACF,GAAG,IAGH,IAAMA,EAAc,WAClB,IACMC,EADYC,SAASC,eAAe,eAChBC,iBAAiB,6BACrCC,EAAoBC,MAAMC,KAAKN,GAASO,WAAU,SAAAC,GAAM,OAAIA,EAAOC,UAAUC,SAAS,kCAAkC,IAE1Hf,EAAOS,IACTd,EAAQ,CACNM,MAAOD,EAAOS,GAAmBR,MACjCE,WAAYH,EAAOS,GAAmBN,WACtCD,QApDYlI,mCAoDSgI,EAAOS,GAAmBP,SAGrD,EAOQc,EAAiB,eAAA9J,GAAAyE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAE,EAAAiF,EAAAC,EAAAC,EAAA,OAAAvF,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB0D,EAAa,CAAD5D,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SAASsD,GAAa,IAAK,OACtB,OAAtBF,EAAUD,EAAS,GAAG1D,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKGgF,MAAM1B,EAAKQ,SAAS,KAAD,EAA5B,IAARlE,EAAQE,EAAAI,MAGA+E,GAAG,CAADnF,EAAAE,KAAA,cACR,IAAIQ,MAAM,gCAAgC,KAAD,SAAAV,EAAAE,KAAA,GAI9BJ,EAASiF,OAAO,KAAD,GAA5BA,EAAI/E,EAAAI,KAGJ4E,EAAUI,IAAIC,gBAAgBN,IAG9BE,EAAIb,SAASkB,cAAc,MAC/B7J,KAAOuJ,EAGTC,EAAEM,SAAW/B,EAAKO,MAGlBkB,EAAEO,QAGFJ,IAAIK,gBAAgBT,GAAShF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAE7B0F,QAAQlE,MAAM,yBAAwBxB,EAAAS,IAAS,yBAAAT,EAAAW,OAAA,GAAAf,EAAA,mBAElD,kBAnCsB,OAAA5E,EAAA6F,MAAA,KAAAC,UAAA,KAqC3B,MAAO,CACD6E,kBA3CsB,WACxBzB,GACF,EA0CIY,kBAAAA,EACAxB,YAAAA,EAAaC,eAAAA,EACbC,KAAAA,EACAM,OAAAA,EAER,E,sCC7CA,MA9DA,SAAqB9I,GAA+B,IAA5BwI,EAAIxI,EAAJwI,KAAMsB,EAAiB9J,EAAjB8J,kBAE5BzH,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhC6E,EAAI3E,EAAA,GAAEqI,EAAOrI,EAAA,GACd6D,EAAc,WAAH,OAASwE,GAAQ,EAAO,EACzC7D,GAAqEV,EAAAA,EAAAA,KAAlDqC,GAAF3B,EAATC,UAAiBD,EAAN2B,QAAQC,EAAS5B,EAAT4B,UAAWE,EAAY9B,EAAZ8B,aAAcD,EAAY7B,EAAZ6B,aAO9C3H,EAAYH,mCAElB,OACEF,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKsH,QATU,WAEjB,GADAiB,EAAUD,EAAS,IACdE,EAAc,OAAOC,GAAa,GACvC+B,GAAQ,EACV,EAK6BtK,UACvBF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACd,YAAa,gBAAiBC,YAAa,eAGrDC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACC,KAAMA,EACb1G,MAAO,CACLyD,gBAAiB,uBAEpBoD,iBAAiB,6CACjBC,gBAAgB,+CAChB,kBAAgB,qCACfF,OAAQhB,EAAY9F,UAClBF,EAAAA,EAAAA,KAAA,OAAKmH,SAAS,KAAK,kBAAgB,yBAAyB,cAAY,OAAMjH,UAC1EM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gCAA+BD,SAAA,EAC3CF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CAAAxB,UACDM,EAAAA,EAAAA,MAACY,EAAAA,EAAM,CAACjB,UAAU,cAAaD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,kCACtByG,QAAStB,EACT5F,MAAO,CACLqK,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,WAEVjK,IAAI,iBACAX,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SACfC,MAAO,CACLyK,UAAW,SAEbpK,IAAKI,EAAYuH,EAAKS,WACtBlI,IAAI,kBAIbX,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAsBmH,QAASoC,EAAkBxJ,UAC7DF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACd,YAAa,YAAaC,YAAa,sBAK3DC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAC8K,EAAAA,EAAS,QAIpB,ECyCA,EA1FmB,WACjB,IAAMjK,EAAYH,mCAClBqK,EAKEC,IAJAtB,EAAiBqB,EAAjBrB,kBACAa,EAAiBQ,EAAjBR,kBACAnC,EAAI2C,EAAJ3C,KACAM,EAAMqC,EAANrC,OAGF,OACElI,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACEM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4BAA2BD,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,yBACpB+C,GAAG,uBACHjD,IAAI,YACJR,UAAU,sBACZH,EAAAA,EAAAA,KAACiL,EAAAA,GAAM,CACLrH,GAAG,cACHzD,UAAU,6BACV+K,OAAQ,YACRC,gBAAgB,EAChBC,WAAY,CACVC,OAAQ,wBACRC,OAAQ,0BAGVC,aAAc,EACdC,sBAAsB,EACtBC,cAAelB,EACfmB,cAAe,EACfC,MAAM,EACNC,gBAAiB,CACfC,OAAQ,EACNC,QAAS,GACTC,MAAO,IACPC,SAAU,EACVC,cAAc,GAGlBC,YAAa,CAEX,IAAK,CACHR,cAAe,EACfS,aAAc,IAGlBC,WAAY,CAAEC,WAAW,GACzBC,QAAS,CAACC,EAAAA,GAAiBC,EAAAA,GAAYC,EAAAA,IAAYvM,SAE/CwI,EAAO7G,KAAI,SAAAjC,GAAA,IAAEgE,EAAEhE,EAAFgE,GAAI5B,EAAQpC,EAARoC,SAAU2G,EAAK/I,EAAL+I,MAAOE,EAAUjJ,EAAViJ,WAAYD,EAAOhJ,EAAPgJ,QAAO,OACjD5I,EAAAA,EAAAA,KAAC0M,EAAAA,GAAW,CACZ,sBAAsB9D,EACtB,4BAA6BC,EAE7B1I,UAAU,eAAcD,UACpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAYM,IAAKI,EAAYmB,EAAUrB,IAAKgI,KAF1D/E,EAGS,OAIxB5D,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,0BACtBF,IAAI,aACJiD,GAAG,wBACHzD,UAAU,0BAEZH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CAACvB,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iCAAgCD,SAAC,mCAIhDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CAAAxB,UACAM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sCAAqCD,SAAA,EACpDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC2M,EAAY,CAACjD,kBAAmBA,EAAmBtB,KAAMA,OAE5DpI,EAAAA,EAAAA,KAAA,OAAKsH,QAASoC,EAAkBxJ,UAC9BF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CACLd,YAAa,YACbC,YAAa,oBAIrBC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAC8K,EAAAA,EAAS,QAIpB,E,UCvEA,EA/ByB,WAErB,IAAM8B,GAAYC,EAAAA,EAAAA,QAAO,MACjBC,GAAW/L,EAAAA,EAAAA,KAAX+L,OACR7K,GAAkCC,EAAAA,EAAAA,UAAS,CACzCrC,IAAK,GACLkN,SAAU,KACV5K,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAHK+K,EAAS7K,EAAA,GAAE8K,EAAY9K,EAAA,GAwBhC,OApBAQ,EAAAA,EAAAA,YAAU,WACJiK,EAAUM,SACZN,EAAUM,QAAQC,OAAOC,GAAG,eAAe,WAC1BpE,SAASE,iBAAiB,uBAElCmE,SAAQ,SAACC,EAAOC,GACjBA,IAAUX,EAAUM,QAAQC,OAAOK,aACrCF,EAAMG,OACNR,EAAa,CACXpN,IAAKyN,EAAMI,aAAa,OACxBX,SAAUO,EAAMI,aAAa,eAG/BJ,EAAMK,OAEV,GACF,GAEJ,GAAG,IAEI,CAAEb,OAAAA,EAAQF,UAAAA,EAAWI,UAAAA,EAC9B,E,UC+EA,EA9FqB,WACnB,IAAMnM,EAAYH,mCAClBkN,EAA2CC,IAAlCjB,EAASgB,EAAThB,UAAYE,EAAMc,EAANd,OAAQE,EAASY,EAATZ,UAE7B,OACExM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACIF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACDM,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAACvB,UAAU,4DAA2DD,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,KAAGK,KAAM2M,EAAUnN,IAAKM,UAAU,kDAAkD0H,OAAO,QAAO3H,UAC1FF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,yCAA0CF,IAAI,sBAExEX,EAAAA,EAAAA,KAAA,KAAGK,KAAM2M,EAAUnN,IAAKO,MAAO,CAC7B0N,QAAS,YACT5N,UACAM,EAAAA,EAAAA,MAAA,QAAML,UAAU,wDAAuDD,SAAA,CAAE8M,EAAUD,SAAS,eAKxGvM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oDAAmDD,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,yBACpB+C,GAAG,yBACHjD,IAAI,YACJR,UAAU,0BAEZH,EAAAA,EAAAA,KAACiL,EAAAA,GAAM,CACP8C,IAAKnB,EACLhJ,GAAG,iBACHzD,UAAU,uBACV+K,OAAQ,YACR8C,YAAY,EACZ7C,gBAAgB,EAChBI,aAAc,EACdH,WAAY,CACVC,OAAQ,0BACRC,OAAQ,4BAEVK,MAAM,EACNH,sBAAsB,EACtBE,cAAe,EACfE,gBAAiB,CACfC,OAAQ,EACRC,QAAS,GACTC,MAAO,IACPC,SAAU,EACVC,cAAc,EACdpH,KAAM,CAEJoJ,UAAW,EAAE,GAAI,EAAG,IAEtBnJ,KAAM,CAEJmJ,UAAW,EAAE,GAAI,EAAG,KAGxB/B,YAAa,CAEX,IAAK,CACHR,cAAe,EACfS,aAAc,KAGlBC,WAAY,CAAEC,WAAW,GACzBC,QAAS,CAACC,EAAAA,GAAiBC,EAAAA,GAAYC,EAAAA,IAAYvM,SAGjDkJ,MAAM8E,QAAQpB,IAAWA,GAAUA,EAAOjL,KAAI,SAACyL,EAAOC,GAAK,OACrDvN,EAAAA,EAAAA,KAAC0M,EAAAA,GAAW,CAAavM,UAAU,QAAOD,SACrC,SAAAN,GAAA,IAAGuO,EAAQvO,EAARuO,SAAQ,OACTnO,EAAAA,EAAAA,KAAA,SACA+M,SAAUO,EAAMP,SAChBlN,IAAKyN,EAAMzN,IACXM,UAAWgO,EAAW,gCAAiC,YACvDC,UAAQ,EACRC,OAAK,EACL1C,MAAI,EACJ2C,SAAUH,EAASjO,UACnBF,EAAAA,EAAAA,KAAA,UAAQS,IAAKI,EAAYyM,EAAMiB,SAAU9G,KAAK,eACxC,GAXK8F,EAaJ,OAItBvN,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,0BACtBF,IAAI,aACJiD,GAAG,0BACHzD,UAAU,+BAKlB,E,oBCbA,EAjFiB,WAEb,IAAMU,EAAYH,mCAEpB,OACEF,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACAM,EAAAA,EAAAA,MAAA,WAASL,UAAU,qDAAoDD,SAAA,EACnEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,0BAAyBD,UACpCF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,qCACtBF,IAAI,kBACJR,UAAU,2CAEdK,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CAACtB,UAAU,OAAMD,SAAA,EACvBF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CAACvB,WAAS,EAAAD,UACVF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACDF,EAAAA,EAAAA,KAAA,UAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SACfM,IAAKI,EAAY,6CACjBF,IAAI,uBAKhBH,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAACvB,UAAU,gCAA+BD,SAAA,EAC1CF,EAAAA,EAAAA,KAACwO,EAAAA,EAAG,CAACC,GAAI,EAAEvO,UACPF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACDM,EAAAA,EAAAA,MAAA,WAAAN,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cACfM,IAAKI,EAAY,uCACjBF,IAAI,mBACJH,EAAAA,EAAAA,MAAA,KAAGL,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,iBAAgBD,SAAC,+BAAiC,sCAK9EF,EAAAA,EAAAA,KAACwO,EAAAA,EAAG,CAACC,GAAI,EAAEvO,UAEPF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACDF,EAAAA,EAAAA,KAAC0O,EAAU,eAK3BlO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oBAAmBD,SAAA,EAE/BF,EAAAA,EAAAA,KAAC2O,EAAAA,GAAI,CAACjE,KAAG,EAAAxK,UACJM,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAACvB,UAAU,yBAAwBD,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,UAC9BF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,0CACtBF,IAAI,kBACJR,UAAU,2CAEVH,EAAAA,EAAAA,KAAC4O,EAAAA,EAAY,KACb5O,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAC,wFAI5CF,EAAAA,EAAAA,KAAA,aAGJA,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAvB,UAENF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACDM,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAACvB,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAASD,UACpBF,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAY,wCACtBF,IAAI,kBACJR,UAAU,2CAEdH,EAAAA,EAAAA,KAAC6O,EAAY,eAM7B7O,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACC,cAAe,+CAGpC,C","sources":["components/button/Button.jsx","components/category/Category.jsx","components/category/OtherCategories.jsx","hooks/useClapper.js","components/cinema/Clapperboard.jsx","services/RegisterService.js","hooks/useForm.js","components/modal/ModalForm.jsx","hooks/useSwiperWork.js","components/modal/ModalPreview.jsx","components/swipers/workimpulsos/SwiperWork.jsx","hooks/useSwiperTikToks.js","components/swipers/tiktok/SwiperTiktok.jsx","pages/aumento/Aumentos.jsx"],"sourcesContent":["import React from 'react'\nimport './Button.css';\n\n\nconst Button = ({ url, titleButton, borderColor }) => {\n  return (\n    <>\n      {\n        url ? (\n          <button className='button-general rounded-5 px-4 py-2' style={{\n          borderColor: borderColor\n        }}>\n          <a href={url} className='text-white text-decoration-none z-1'>\n            {titleButton}\n            </a>  \n          </button>\n        ): \n        <button className='button-general rounded-5 px-4 py-2' style={{\n          borderColor: borderColor\n        }}>\n          <span className='text-white text-decoration-none z-1'>\n            {titleButton}\n            </span>  \n        </button>\n      }\n      \n    </>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from '../button/Button';\n\n//Animations\nimport {  Zoom } from 'react-reveal';\n\nconst Category = ({ imageUrl, borderColor, url }) => {\n  const publicURL = process.env.PUBLIC_URL;\n  return (\n    <>\n    <Zoom>\n      <article className=\"d-block text-decoration-none text-center w-auto mx-0 z-1\">\n              <img className=\"d-block mw-100 mx-auto w-auto\" src={publicURL+imageUrl} alt=\"fluye en la u\"/>\n              <Button url={url} \n                    titleButton={'Leer más'}\n                    borderColor={borderColor} />\n        </article>\n    </Zoom>\n      \n    </>\n  )\n}\n\nexport default Category\n","import React from 'react'\nimport Category from './Category';\n//Styles\nimport './Category.css';\n//Hooks\nimport useFolderRoot from '../../hooks/useFolderRoot';\n//Boostrap\nimport { Container, Figure, Row } from 'react-bootstrap';\n\n//Animations\nconst OtherCategories = () => {\n    const publicURL = process.env.PUBLIC_URL;\n    const {otherCategory} = useFolderRoot();\n\n  return (\n    <>\n      <section className=\"other-categories ff-gotham-medium\" style={{\n        background: otherCategory.firstColor\n      }}>\n              {/* Articles */}\n              \n                <div className=\"other-categories--title position-relative\" style={{ \n                  height: '200px',\n                  background: otherCategory.secondColor\n                }}>\n                      <Figure className='text-center position-absolute top-50 start-50'>\n                          <img src={publicURL + otherCategory.headerCategory} alt=\"Otras categorias\" className=\"mw-100\" /> \n                      </Figure>\n                    <div style={{\n                      width: '100vw',\n                      height: '200px',\n                      clipPath: 'polygon(0% 100%, 100% 0%, 100% 100%)',\n                      background: `linear-gradient(to right, ${otherCategory.firstColor} 0%,  ${otherCategory.firstColor} 100%)` \n                    }}></div>\n                </div>\n              \n\n              <Container className='pb-5'>\n                  <Row className=\"position-relative d-flex flex-column flex-lg-row justify-content-center gap-lg-5 mb-4\">\n                        <div className=\"overlay\">\n                            <img src={publicURL + otherCategory.overlay} \n                            alt=\"Pepitas flotantes\" \n                            className=\"floating-image mw-100 w-100 z-0 position-relative\" /> \n                        </div>\n                          {\n                              otherCategory.list ? (\n                                  otherCategory['list'].map( category => (\n                                      <Category \n                                        borderColor={otherCategory.borderColor} \n                                        key={category.url} \n                                        imageUrl={category.urlImage} \n                                        url= {category.url}\n                                        />\n                                  ))\n                              ): null\n                          }\n                    </Row>\n              </Container>\n          </section>\n    </>\n  )\n}\n\nexport default OtherCategories\n","import { useState, useEffect } from 'react';\n\nconst useClapper = () => {\n    const [totalSeconds, setTotalSeconds] = useState(0);\n    const [currentColor, setCurrentColor] = useState('red');\n\n  useEffect(() => {\n    const colors = ['red', 'green']; // List of colors to cycle through\n    let currentIndex = 0;\n\n    const intervalId = setInterval(() => {\n         // Update the current color to the next color in the list\n        setCurrentColor(colors[currentIndex]);\n        currentIndex = (currentIndex + 1) % colors.length;\n        //Timer Seconds\n        setTotalSeconds(prevSeconds => prevSeconds + 1);\n    }, 1000);\n\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []); // Empty dependency array means this effect runs once after initial render\n\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n\n\n  return { seconds, minutes, hours , currentColor};\n};\n\nexport default useClapper;\n","import React  from 'react';\nimport './Clapperboard.css';\nimport useClapper from '../../hooks/useClapper';\nimport Button from '../button/Button';\n\nconst Clapperboard = ({ isText }) => {\n    const publicURL = process.env.PUBLIC_URL;\n    const { seconds, minutes, hours , currentColor} = useClapper();\n  return (\n    <>\n      <div className=\"video-work ff-gotham-medium text-start text-white\">\n            <div className=\"recuadro-video\" style={{\n                maxWidth: isText ? '1000px' : '600px'\n            }}>\n                <div className=\"image-modo-cine\">\n                    <img src={publicURL + \"/images/home/cuadro-cine.png\"} alt=\"Cine cuadro\"/>    \n                </div>\n                <div className=\"recgrabacion\">\n                    <div className=\"signal\" id=\"signals\" style={{backgroundColor: currentColor}}></div>\n                    <img src={publicURL + \"/images/home/rec.svg\"} alt=\"Rec\" /> \n                </div>\n                <div id=\"contador\">00:{hours < 10 ? '0' : ''}\n                    {hours}:{minutes < 10 ? '0' : ''}{minutes}:{seconds < 10 ? '0' : ''}{seconds}\n                </div>\n\n                {\n                    isText && (\n                        <div className=\"txt-videos-work\" >\n                            <p>#RespiraYTomaUnImpulsoReal con Halls y haz tu mejor performance en la entrevista para seguir facturando.</p>\n                            <Button \n                            url={'manifestando-aumentos'}\n                            borderColor={'#00F98C'}\n                            titleButton={'Leer más'}  />\n                        </div>\n                    )\n                }\n            </div>\n            {\n                isText && (\n                    <div className='txt-videos-work-mobile'>\n                    <p className='mt-3 text-start text-center fs-5'>\n                        Basta de apps y cursos de inglés.Mejor cómete un Halls y practica lipsync con estos videos que de aburridos no tienen nada. #RespiraYTomaUnImpulsoReal haz tu mejor performance en tu entrevista y sigue facturando.\n                    </p>\n                        <div className=\"text-center\">\n                        <Button \n                            url={'manifestando-aumentos'}\n                            borderColor={'#00F98C'}\n                            titleButton={'Leer más'}  />\n                        </div>\n                        <br/>\n                        <br/>\n                    </div>\n                    \n                )\n            }\n        </div>\n    </>\n  )\n}\n\nexport default Clapperboard\n","import axios from 'axios';\nconst API_BASE_URL = 'https://respiraconhalls.com/proyecto/public/';  // Replace with your API base URL\n\nconst instance = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nconst RegisterService = {\n    \n    register: async (person) => {\n\n      try {\n        const response = await instance.post('/api/store', person); // Assuming the JSON file is in the root directory\n        //If \n        localStorage.setItem('SIGN_STAR', true);\n        return response.data;\n      } catch (error) {\n        throw new Error('Error fetching data from the JSON file');\n      }\n    },\n  };\n  \n  export default RegisterService;\n  ","import { useState} from 'react';\nimport useFolderRoot from './useFolderRoot';\nimport RegisterService from '../services/RegisterService';\nimport { useMyState } from '../context/ContextGlobal';\n\n\nconst useForm = () => {\n\n      const { modal } = useFolderRoot();\n      const [email, setEmail] = useState('');\n      const [name, setName] = useState('');    \n      const { handleClose  } = useMyState()\n      const [error, setError] = useState(null); // Nuevo estado para almacenar errores\n\n   \n      const handleSubmit = async (e) => {\n         e.preventDefault();\n     \n         try {\n            await RegisterService.register({ email, name });\n            handleClose()\n         } catch (error) {\n            setError('Error en los datos, por favor completa todos los campos');\n         }\n      };\n\n  return { handleSubmit, modal, email, name,  setEmail, setName, error};\n};\n\nexport default useForm;\n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport useForm from '../../hooks/useForm';\nimport { useMyState } from '../../context/ContextGlobal';\nimport './Modal.css';\n\nconst ModalForm = () => {\n     \n   const publicURL = process.env.PUBLIC_URL;\n   const { handleSubmit, modal, email, name,  setEmail, setName, error} = useForm(); \n   const { showModal, handleClose  } = useMyState()\n\n  return (\n    <div>\n      <Modal show={showModal}\n      className='modal'\n      style={{\n         backgroundColor: modal.primaryColor\n      }}\n      onHide={() => handleClose}\n      contentClassName='modal-content bg-transparent border-0 mb-5'\n      dialogClassName=\"modal-dialog modal-dialog-centered  modal-xl\"\n      aria-labelledby=\"example-custom-modal-styling-title\">\n\n<div tabIndex=\"-1\" aria-labelledby=\"amor-astros-modalLabel\" aria-hidden=\"true\">\n    <div className=\"modal-header flex-row justify-content-center border-0 my-4 \">\n            <div className=\"modal-header-banner align-self-center\">\n               <div className=\"row justify-content-md-center\">\n                  <div className=\"col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                     <img className=\"d-block mw-100 mx-auto\" \n                           src={publicURL + modal.headerImage} \n                           alt=\"Respira y toma un impulso\" />\n                     <p className=\"my-4 ff-gotham-bold text-white\">{modal.description}</p>\n                  </div>\n               </div>\n            </div>\n            \n               <img src={publicURL + \"/images/icons/close.svg\"} alt=\"close button\"\n                  onClick={handleClose} className='d-block align-self-baseline'\n                />\n         </div>\n         <form onSubmit={handleSubmit}>\n            <div className=\"modal-body bg-white p-4 rounded-4 mb-5\">\n               <div className=\"row\">\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-lg-x\">\n                     <label htmlFor=\"inputEmail4\" className=\"ms-2 text-start d-block form-label fs-6 fc-gray-soft\">Nombre:</label>\n                     <input type=\"text\" \n                           style={{ backgroundColor: modal.inputColor }} \n                           className=\"form-control rounded-4\" \n                           value={name} \n                           onChange={(e) => setName(e.target.value)}\n                           aria-label=\"First name\" />\n                  </div>\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-lg-x\">\n                     <label htmlFor=\"inputEmail4\" className=\"ms-2 text-start d-block form-label fs-6 fc-gray-soft\">Email:</label>\n                     <input type=\"email\" \n                           style={{ backgroundColor: modal.inputColor }} \n                           className=\"form-control rounded-4\" \n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                           aria-label=\"Email\" />\n                  </div>\n               </div>\n               <div className=\"row\">\n                  <div className=\"form-check d-flex justify-content-center gap-1 my-4\">\n                     <input className=\"form-check-input\" type=\"checkbox\" id=\"defaultCheck1\"  />\n                     <label className=\"form-check-label fc-gray-soft\" htmlFor=\"defaultCheck1\" v>\n                     Acepta términos y condiciones\n                     </label>  \n                  </div>\n               </div>\n               {\n                        error && (\n                           <div className=\"row text-center\">\n                              <p className='ff-gotham-bold' style={{\n                                 color: 'red',\n                                 fontSize: '12px'\n                              }}>{error}</p>\n                           </div>\n                        )\n                     }\n               <div className=\"border-0 d-flex flex-row justify-content-center my-2 bg-transparent\">\n                  <button type=\"submit\" style={{ backgroundColor: modal.buttonColor }} className=\"d-block text-center text-white px-5 py-2 border-0 rounded-4\">Enviar</button>\n               </div>\n            </div>\n         </form>\n         <div className=\"row halls-text text-start mt-5\">\n            <a className=\"navbar-brand\" href=\"/\">\n            <img className=\"w-auto mb-3 \" src={publicURL + \"/images/logos/halls-white.svg\"} alt=\"Halls Logo\" />\n            </a>\n         </div>\n      </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ModalForm\n","\nimport { useEffect, useState } from 'react';\nimport { useMyState } from '../context/ContextGlobal';\n\nconst useSwiperWork = () => {\n  \n    const [showPreview, setShowPreview] = useState(false);\n    const [info, setInfo] = useState({});\n    const publicURL = process.env.PUBLIC_URL;\n    const { showModal, action, setAction, cookieExists, setShowModal } = useMyState();\n  \n      const photos = [\n        {   \n            id: 0,\n            title: 'Pedir aumento',\n            urlImage: '/images/pages/green/pedir-aumento.png',\n            urlFile: '/files/previews/pedir-aumento.pdf',\n            imageModal: '/images/pages/green/modal/previews/pedir-aumento.png'\n  \n        },\n        {\n            id: 1,\n            title: 'Pedir vacaciones',\n            urlImage: '/images/pages/green/pedir-vacaciones.png',\n            urlFile: '/files/previews/pedir-vacaciones.pdf',\n            imageModal: '/images/pages/green/modal/previews/pedir-vacaciones.png'\n  \n        },\n        {\n            id: 2,\n            title: 'Home Office',\n            urlImage: '/images/pages/green/home-office.png',\n            urlFile: '/files/previews/home-office.pdf',\n            imageModal: '/images/pages/green/modal/previews/home-office.png'\n  \n        },\n        {\n            id: 3,\n            title: 'Salir viernes temprano',\n            urlImage: '/images/pages/green/work-slide-1.png',\n            urlFile: '/files/previews/salir-viernes-temprano.pdf',\n            imageModal: '/images/pages/green/modal/previews/viernes-temprano.png'\n  \n        }\n    ];\n\n    useEffect(() => {\n      getInfoFrom()\n    }, [])\n\n\n    const getInfoFrom = () => {\n      const parentDiv = document.getElementById(\"swiper-work\"); \n      const bullets = parentDiv.querySelectorAll(\".swiper-pagination-bullet\"); \n      const activeBulletIndex = Array.from(bullets).findIndex(bullet => bullet.classList.contains('swiper-pagination-bullet-active'));\n\n      if (photos[activeBulletIndex]) {\n        setInfo({\n          title: photos[activeBulletIndex].title,\n          imageModal: photos[activeBulletIndex].imageModal,\n          urlFile: publicURL + photos[activeBulletIndex].urlFile\n        })\n      }\n    }\n    \n    const handleSlideChange = () => {\n      getInfoFrom()      \n    };\n  \n\n      const handleDownloadPDF = async () => {\n        if (!cookieExists) return setShowModal(true); \n        setAction(action + 1);\n      \n        try {\n          \n          // Fetch the PDF content from the URL\n          const response = await fetch(info.urlFile);\n    \n          // Check if the fetch was successful\n          if (!response.ok) {\n            throw new Error('Failed to fetch the PDF file');\n          }\n    \n          // Convert the response to a Blob\n          const blob = await response.blob();\n    \n          // Create a URL for the Blob\n          const blobUrl = URL.createObjectURL(blob);\n    \n          // Create an anchor element and set its href to the Blob URL\n          const a = document.createElement('a');\n          a.href = blobUrl;\n    \n          // Set the anchor element to download the PDF file with a specified filename\n          a.download = info.title;\n    \n          // Trigger a click event on the anchor element to initiate the download\n          a.click();\n    \n          // Release the Object URL to free up resources\n          URL.revokeObjectURL(blobUrl);\n        } catch (error) {\n          console.error('Error downloading PDF:', error);\n        }\n      };\n\n  return {\n        handleSlideChange,\n        handleDownloadPDF, \n        showPreview, setShowPreview,\n        info,\n        photos\n    };\n};\n\nexport default useSwiperWork;\n","import { useState } from 'react';\nimport { Figure, Row } from 'react-bootstrap';\nimport Button from '../button/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useMyState } from '../../context/ContextGlobal';\nimport ModalForm from './ModalForm';\n\nfunction ModalPreview({ info, handleDownloadPDF }) {\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const { showModal, action, setAction, setShowModal, cookieExists } = useMyState(); \n\n  const handleShow = () => {\n    setAction(action + 1);\n    if (!cookieExists) return setShowModal(true); \n    setShow(true);\n  }\n  const publicURL = process.env.PUBLIC_URL;\n\n  return (\n    <>\n      <div onClick={handleShow}> \n        <Button titleButton={'Previsualizar'} borderColor={'#00F98C'} />\n      </div>\n\n      <Modal show={show} \n      style={{\n        backgroundColor: \"rgb(1, 103, 49, .7)\"\n     }}\n     contentClassName='modal-content bg-transparent border-0 mb-5'\n     dialogClassName=\"modal-dialog modal-dialog-centered  modal-xl\"\n     aria-labelledby=\"example-custom-modal-styling-title\"\n      onHide={handleClose}>\n        <div tabIndex=\"-1\" aria-labelledby=\"amor-astros-modalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-body p-4 rounded-4 mb-5\">\n               <Row>\n                  <Figure className='text-center'>\n                    <img src={publicURL + \"/images/icons/close-preview.png\"} \n                    onClick={handleClose}\n                    style={{\n                      position: 'absolute',\n                      top: 0,\n                      right: 0,\n                      cursor: 'pointer',\n                    }}  \n                    alt=\"Logo cerrar\" />\n                        <img className='mw-100' \n                        style={{\n                          maxHeight: '700px'  \n                        }}\n                        src={publicURL + info.imageModal} \n                        alt=\"Preview\" />\n                  </Figure>\n               </Row>\n               \n               <div className='mx-auto text-center' onClick={handleDownloadPDF}>\n                  <Button titleButton={'Descargar'} borderColor={'#00F98C'} />\n               </div>\n            </div>\n      </div>\n      </Modal>\n      <div className=\"mt-0 p-0\">\n          <ModalForm />\n        </div>\n    </>\n  );\n}\n\nexport default ModalPreview;","import React  from 'react';\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport '../Swiper.css';\n\n// import required modules\nimport { EffectCoverflow, Pagination, Navigation } from 'swiper/modules';\nimport { Row } from 'react-bootstrap';\nimport Button from '../../button/Button';\nimport useSwiperWork from '../../../hooks/useSwiperWork';\nimport ModalPreview from '../../modal/ModalPreview';\nimport ModalForm from '../../modal/ModalForm';\n\nconst SwiperWork = () => {\n  const publicURL = process.env.PUBLIC_URL;\n  const {\n    handleDownloadPDF,\n    handleSlideChange,\n    info,\n    photos\n} = useSwiperWork();\n\n  return (\n    <>\n      <div className=\"d-flex align-items-center\">\n        <img src={publicURL + '/images/icons/left.png'} \n          id='swiper-work-iconleft'\n          alt=\"left-icon\" \n          className='swiper--iconleft'/>\n        <Swiper\n          id='swiper-work'\n          className='swiper p-0 my-4 w-75 h-100'\n          effect={'coverflow'}\n          centeredSlides={true}\n          navigation={{\n            prevEl: '#swiper-work-iconleft',\n            nextEl: '#swiper-work-iconright',\n          }}\n  \n          initialSlide={1}\n          centeredSlidesBounds={false}\n          onSlideChange={handleSlideChange}\n          slidesPerView={1}\n          loop={true}\n          coverflowEffect={{\n            rotate: 0,\n              stretch: 70,\n              depth: 200,\n              modifier: 1,\n              slideShadows: true, \n              \n          }}\n          breakpoints={{\n            // when window width is >= 768px\n            768: {\n              slidesPerView: 2,\n              spaceBetween: 0\n            }\n          }}\n          pagination={{ clickable: true }}\n          modules={[EffectCoverflow, Pagination, Navigation]}>\n            {\n              photos.map(({id, urlImage, title, imageModal, urlFile}) => (\n                  <SwiperSlide  \n                  data-file-attribute={ urlFile}\n                  data-image-modal-atribute = {imageModal}\n                  key={id}\n                  className='swiper-slide'>\n                      <img className='rounded-4' src={publicURL + urlImage} alt={title} />\n                  </SwiperSlide>\n              ))\n          }\n        </Swiper>\n        <img src={publicURL + '/images/icons/right.png'} \n        alt=\"right-icon\" \n        id='swiper-work-iconright'\n        className='swiper--iconright'/>\n      </div>\n      <Row className='mt-3'>\n        <p className='text-white ff-gotham-bold fs-5'>\n        ¿Con cuál te atreves?\n        </p>\n      </Row>\n      <Row>\n          <div className=\"d-flex justify-content-center gap-3\">\n          <div>\n            <ModalPreview handleDownloadPDF={handleDownloadPDF} info={info} />\n          </div>\n          <div onClick={handleDownloadPDF}>\n            <Button \n              titleButton={'Descargar'} \n              borderColor={'#00F98C'} />\n          </div>\n          </div>\n      </Row>\n      <div className=\"mt-0 p-0\">\n          <ModalForm />\n        </div>\n    </>\n  );\n}\n\n\nexport default SwiperWork","import { useEffect, useRef, useState} from 'react';\nimport useFolderRoot from './useFolderRoot';\n\nconst useSwiperTikToks = () => {\n\n    const swiperRef = useRef(null);  \n    const { videos } = useFolderRoot();\n    const [infoVideo, setInfoVideo] = useState({\n      url: '',\n      username: ''\n    })\n  useEffect(() => {\n    if (swiperRef.current) {\n      swiperRef.current.swiper.on('slideChange', () => {\n        const videos = document.querySelectorAll('.swiper-slide video');\n\n        videos.forEach((video, index) => {\n          if (index === swiperRef.current.swiper.activeIndex) {\n            video.play();\n            setInfoVideo({\n              url: video.getAttribute(\"url\"),\n              username: video.getAttribute(\"username\")\n            })\n          } else {\n            video.pause();\n          }\n        });\n      });\n    }\n  }, []);\n\n  return { videos, swiperRef, infoVideo};\n};\n\nexport default useSwiperTikToks;\n","import React from 'react'\n\n// Import Swiper React components\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\n\nimport '../Swiper.css';\n\nimport { Swiper, SwiperSlide, } from 'swiper/react';\n\nimport { EffectCoverflow, Pagination, Navigation } from 'swiper/modules';\nimport useSwiperTikToks from '../../../hooks/useSwiperTikToks';\nimport { Zoom } from 'react-reveal';\nimport { Row } from 'react-bootstrap';\n\nconst SwiperTiktok = () => {\n  const publicURL = process.env.PUBLIC_URL;\n  const {  swiperRef , videos, infoVideo } = useSwiperTikToks()\n  \n  return (\n    <div>\n        <Zoom>\n            <Row className=\"tag d-flex justify-content-center align-items-center mb-4\">\n            <a href={infoVideo.url} className=\"d-block text-decoration-none text-center w-auto\" target='blank'>\n                    <img src={publicURL + \"/images/pages/green/instagram-icon.svg\"} alt=\"Icon Instagram\" /> \n                </a>\n                <a href={infoVideo.url} style={{\n                  display: 'contents',\n                }}>\n                  <span className=\"tag--title d-block text-center text-white w-auto fs-3\">{infoVideo.username} </span>\n                </a>\n                \n            </Row>\n        </Zoom>\n      <div className=\"d-flex justify-content-center align-items-center \">\n        <img src={publicURL + '/images/icons/left.png'} \n          id='swiper-tiktok-iconleft'\n          alt=\"left-icon\" \n          className='swiper--iconleft z-1'  />\n\n        <Swiper\n        ref={swiperRef}\n        id='swiper-tiktoks'\n        className='swiper p-0 my-4 w-75'\n        effect={'coverflow'}\n        grabCursor={true}\n        centeredSlides={true}\n        initialSlide={3}\n        navigation={{\n          prevEl: '#swiper-tiktok-iconleft',\n          nextEl: '#swiper-tiktok-iconright',\n        }}\n        loop={true}\n        centeredSlidesBounds={true}\n        slidesPerView={1}\n        coverflowEffect={{\n          rotate: 0,\n          stretch: 60,\n          depth: 300,\n          modifier: 1,\n          slideShadows: false,\n          prev: {\n            // will set `translateZ(-400px)` on previous slides\n            translate: [-56, 0, 0],\n          },\n          next: {\n            // will set `translateX(100%)` on next slides\n            translate: [-56, 0, 0],\n          },\n        }}\n        breakpoints={{\n          // when window width is >= 768px\n          768: {\n            slidesPerView: 2,\n            spaceBetween: 90\n          }\n        }}\n        pagination={{ clickable: true }}\n        modules={[EffectCoverflow, Pagination, Navigation]}\n      >\n        {\n          Array.isArray(videos) && videos && videos.map((video, index) => (\n                <SwiperSlide key={index} className='h-100'>\n                    {({ isActive }) => (\n                       <video\n                       username={video.username}\n                       url={video.url}\n                       className={isActive ? 'swiper-video-border rounded-5': 'rounded-5'}\n                       controls\n                       muted\n                       loop\n                       autoPlay={isActive}>\n                       <source src={publicURL + video.location} type=\"video/mp4\" />\n                     </video>\n                    )}\n                </SwiperSlide>\n            ))\n        }\n      </Swiper>\n        <img src={publicURL + '/images/icons/right.png'} \n        alt=\"right-icon\" \n        id='swiper-tiktok-iconright'\n        className='swiper--iconright z-1'/>\n      </div>\n       \n    </div>\n  )\n}\n\nexport default SwiperTiktok\n","import React from 'react';\n//Styles\nimport './Aumentos.css';\nimport '../../styles/keyframes.css';\n//Components\nimport Clapperboard from '../../components/cinema/Clapperboard';\nimport OtherCategories from '../../components/category/OtherCategories';\nimport SwiperWork from '../../components/swipers/workimpulsos/SwiperWork';\nimport SwiperTiktok from '../../components/swipers/tiktok/SwiperTiktok';\n\n//Boostrap\nimport { Col, Container, Row } from 'react-bootstrap';\n//Animations\nimport { Zoom, Fade } from 'react-reveal';\n\nconst Aumentos = () => {\n\n    const publicURL = process.env.PUBLIC_URL;\n\n  return (\n    <>\n    <section className=\"manifestando-aumentos text-center ff-gotham-medium\">\n        <div className=\"container-fluid overlay\">\n            <img src={publicURL + \"/images/pages/green/bg-pepitas.png\"} \n            alt=\"Floating Images\" \n            className=\"pepitas floating-image mw-100 w-100\" /> \n        </div>\n        <Container className=\"py-5\">\n            <Row className>\n                <Zoom >\n                    <figure>\n                        <img className=\"mw-100\" \n                        src={publicURL + \"/images/pages/green/manifestando-barra.svg\"} \n                        alt=\"Barra verde\" /> \n                    </figure>\n                </Zoom>\n            </Row>\n          \n            <Row className=\"align-items-center my-5 gx-5 \">\n                <Col lg={6}>\n                    <Zoom>\n                        <article>\n                            <img className=\"mw-100 mb-5\" \n                            src={publicURL + \"/images/pages/green/workimpulsos.svg\"} \n                            alt=\"Work impulsos\" /> \n                            <p className=\"mt-3 text-white fs-5\">\n                            <span className='ff-gotham-bold'>#RespiraYTomaUnImpulsoReal</span> y ¡Descarga el tuyo!\n                            </p>\n                        </article>\n                    </Zoom>\n                </Col>\n                <Col lg={6}>\n                    {/* Swiper Work*/}\n                    <Zoom>\n                        <SwiperWork/>\n                    </Zoom>\n                </Col>\n            </Row>\n        </Container>\n        <div className='position-relative'>\n            {/* Camera picture */}\n           <Fade top>\n                <Row className=\"mb-5 position-relative\">\n                <div className=\"container overlay\">\n                    <img src={publicURL + \"/images/pages/green/pepitas-clapper.png\"} \n                    alt=\"Floating Images\" \n                    className=\"pepitas floating-image mw-100 w-100\" /> \n                </div>\n                    <Clapperboard />\n                    <p className=\"mt-4 text-white fs-5\">#RespiraYTomaUnImpulsoReal para darla toda en el trabajo y seguir facturando.</p>\n                </Row>\n           </Fade>\n            {/* Typsettings */}\n            <br />\n            \n        </div>\n        <Container>\n            {/* Slider Tik Toks */}\n            <Zoom>\n                <Row className='position-relative'>\n                    <div className=\"overlay\">\n                        <img src={publicURL + \"/images/pages/green/pepitas-video.png\"} \n                        alt=\"Floating Images\" \n                        className=\"pepitas floating-image mw-100 w-100\" /> \n                    </div>\n                    <SwiperTiktok />\n                </Row>\n            </Zoom>\n        </Container>\n    </section>\n    {/* Other categories */}\n    <OtherCategories titleImageUrl={'/images/pages/green/otras-categorias.svg'} />\n    </>\n  )\n}\n\nexport default Aumentos\n"],"names":["_ref","url","titleButton","borderColor","_jsx","_Fragment","children","className","style","href","imageUrl","Zoom","_jsxs","src","process","alt","Button","publicURL","otherCategory","useFolderRoot","background","firstColor","height","secondColor","Figure","headerCategory","width","clipPath","concat","Container","Row","overlay","list","map","category","Category","urlImage","_useState","useState","_useState2","_slicedToArray","totalSeconds","setTotalSeconds","_useState3","_useState4","currentColor","setCurrentColor","useEffect","colors","currentIndex","intervalId","setInterval","length","prevSeconds","clearInterval","hours","Math","floor","seconds","minutes","isText","_useClapper","useClapper","maxWidth","id","backgroundColor","instance","axios","create","baseURL","RegisterService","register","_register","_asyncToGenerator","_regeneratorRuntime","mark","_callee","person","response","wrap","_context","prev","next","post","sent","localStorage","setItem","abrupt","data","t0","Error","stop","_x","apply","arguments","modal","email","setEmail","name","setName","handleClose","useMyState","_useState5","_useState6","error","setError","handleSubmit","e","preventDefault","_useForm","useForm","_useMyState","showModal","Modal","show","primaryColor","onHide","contentClassName","dialogClassName","tabIndex","headerImage","description","onClick","onSubmit","htmlFor","type","inputColor","value","onChange","target","v","color","fontSize","buttonColor","showPreview","setShowPreview","info","setInfo","action","setAction","cookieExists","setShowModal","photos","title","urlFile","imageModal","getInfoFrom","bullets","document","getElementById","querySelectorAll","activeBulletIndex","Array","from","findIndex","bullet","classList","contains","handleDownloadPDF","blob","blobUrl","a","fetch","ok","URL","createObjectURL","createElement","download","click","revokeObjectURL","console","handleSlideChange","setShow","position","top","right","cursor","maxHeight","ModalForm","_useSwiperWork","useSwiperWork","Swiper","effect","centeredSlides","navigation","prevEl","nextEl","initialSlide","centeredSlidesBounds","onSlideChange","slidesPerView","loop","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","breakpoints","spaceBetween","pagination","clickable","modules","EffectCoverflow","Pagination","Navigation","SwiperSlide","ModalPreview","swiperRef","useRef","videos","username","infoVideo","setInfoVideo","current","swiper","on","forEach","video","index","activeIndex","play","getAttribute","pause","_useSwiperTikToks","useSwiperTikToks","display","ref","grabCursor","translate","isArray","isActive","controls","muted","autoPlay","location","Col","lg","SwiperWork","Fade","Clapperboard","SwiperTiktok","OtherCategories","titleImageUrl"],"sourceRoot":""}